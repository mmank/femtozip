# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = cl

# C++ compiler 
CXX = cl

# Standard flags for CC 
CFLAGS = 

# Standard flags for C++ 
CXXFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

#  [debug,release]
BUILD = release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

LIBFZ_CFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) $(__DEBUG_FLAG) \
	/Fd$(LIBNAME).pdb $(____DEBUG_FLAG) $(CPPFLAGS) $(CFLAGS)
LIBFZ_CXXFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) \
	$(__DEBUG_FLAG) /Fd$(LIBNAME).pdb $(____DEBUG_FLAG) /GR /EHsc $(CPPFLAGS) \
	$(CXXFLAGS)
LIBFZ_OBJECTS =  \
	libfz_CStringDocumentList.obj \
	libfz_Codeword.obj \
	libfz_CompressionModel.obj \
	libfz_DataIO.obj \
	libfz_DecodeTable.obj \
	libfz_DictionaryOptimizer.obj \
	libfz_DocumentList.obj \
	libfz_FemtoZipCompressionModel.obj \
	libfz_FileDocumentList.obj \
	libfz_FileUtil.obj \
	libfz_FrequencyHuffmanModel.obj \
	libfz_HuffmanDecoder.obj \
	libfz_HuffmanEncoder.obj \
	libfz_PrefixHash.obj \
	libfz_PureHuffmanCompressionModel.obj \
	libfz_SamplingDocumentList.obj \
	libfz_Substring.obj \
	libfz_SubstringPacker.obj \
	libfz_SubstringUnpacker.obj \
	libfz_VerboseStringConsumer.obj \
	libfz_femtozip.obj \
	libfz_lcp.obj \
	libfz_sarray.obj
FZTESTS_CFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) \
	$(__DEBUG_FLAG) /Fdfztests.pdb $(____DEBUG_FLAG) /I.\libfz\src $(CPPFLAGS) \
	$(CFLAGS)
FZTESTS_CXXFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) \
	$(__DEBUG_FLAG) /Fdfztests.pdb $(____DEBUG_FLAG) /I.\libfz\src /GR /EHsc \
	$(CPPFLAGS) $(CXXFLAGS)
FZTESTS_OBJECTS =  \
	fztests_fztests.obj \
	fztests_example.obj

### Conditionally set variables: ###

!if "$(BUILD)" == "debug"
LIBNAME = libfzd
!endif
!if "$(BUILD)" == "release"
LIBNAME = libfz
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_13 = /DEBUG
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_13 = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_14 = $(__DEBUG_FLAG_17)
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_14 = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_17 = 
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_17 = /opt:ref /opt:icf
!endif
!if "$(BUILD)" == "debug"
__OPTIMIZE_FLAG = /Od
!endif
!if "$(BUILD)" == "release"
__OPTIMIZE_FLAG = /O2
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG = /Zi
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
____DEBUG_FLAG = /D_DEBUG
!endif
!if "$(BUILD)" == "release"
____DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_0 = d
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_0 = 
!endif


### Targets: ###

all: $(LIBNAME).lib fztests.exe

clean: 
	-if exist .\*.obj del .\*.obj
	-if exist .\*.res del .\*.res
	-if exist .\*.pch del .\*.pch
	-if exist $(LIBNAME).lib del $(LIBNAME).lib
	-if exist fztests.exe del fztests.exe
	-if exist fztests.ilk del fztests.ilk
	-if exist fztests.pdb del fztests.pdb

$(LIBNAME).lib: $(LIBFZ_OBJECTS)
	if exist $@ del $@
	link /LIB /NOLOGO /OUT:$@ @<<
	$(LIBFZ_OBJECTS)
<<

fztests.exe: $(FZTESTS_OBJECTS) $(LIBNAME).lib
	link /NOLOGO /OUT:$@  $(__DEBUG_FLAG_13) /pdb:"fztests.pdb" $(__DEBUG_FLAG_14) $(LDFLAGS) @<<
	$(FZTESTS_OBJECTS)   $(LIBNAME).lib
<<

libfz_CStringDocumentList.obj: .\libfz\src\CStringDocumentList.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\CStringDocumentList.cpp

libfz_Codeword.obj: .\libfz\src\Codeword.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\Codeword.cpp

libfz_CompressionModel.obj: .\libfz\src\CompressionModel.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\CompressionModel.cpp

libfz_DataIO.obj: .\libfz\src\DataIO.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\DataIO.cpp

libfz_DecodeTable.obj: .\libfz\src\DecodeTable.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\DecodeTable.cpp

libfz_DictionaryOptimizer.obj: .\libfz\src\DictionaryOptimizer.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\DictionaryOptimizer.cpp

libfz_DocumentList.obj: .\libfz\src\DocumentList.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\DocumentList.cpp

libfz_FemtoZipCompressionModel.obj: .\libfz\src\FemtoZipCompressionModel.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\FemtoZipCompressionModel.cpp

libfz_FileDocumentList.obj: .\libfz\src\FileDocumentList.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\FileDocumentList.cpp

libfz_FileUtil.obj: .\libfz\src\FileUtil.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\FileUtil.cpp

libfz_FrequencyHuffmanModel.obj: .\libfz\src\FrequencyHuffmanModel.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\FrequencyHuffmanModel.cpp

libfz_HuffmanDecoder.obj: .\libfz\src\HuffmanDecoder.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\HuffmanDecoder.cpp

libfz_HuffmanEncoder.obj: .\libfz\src\HuffmanEncoder.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\HuffmanEncoder.cpp

libfz_PrefixHash.obj: .\libfz\src\PrefixHash.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\PrefixHash.cpp

libfz_PureHuffmanCompressionModel.obj: .\libfz\src\PureHuffmanCompressionModel.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\PureHuffmanCompressionModel.cpp

libfz_SamplingDocumentList.obj: .\libfz\src\SamplingDocumentList.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\SamplingDocumentList.cpp

libfz_Substring.obj: .\libfz\src\Substring.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\Substring.cpp

libfz_SubstringPacker.obj: .\libfz\src\SubstringPacker.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\SubstringPacker.cpp

libfz_SubstringUnpacker.obj: .\libfz\src\SubstringUnpacker.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\SubstringUnpacker.cpp

libfz_VerboseStringConsumer.obj: .\libfz\src\VerboseStringConsumer.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\VerboseStringConsumer.cpp

libfz_femtozip.obj: .\libfz\src\femtozip.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(LIBFZ_CXXFLAGS) .\libfz\src\femtozip.cpp

libfz_lcp.obj: .\libfz\src\lcp.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBFZ_CFLAGS) .\libfz\src\lcp.c

libfz_sarray.obj: .\libfz\src\sarray.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBFZ_CFLAGS) .\libfz\src\sarray.c

fztests_fztests.obj: .\fztests\src\fztests.cpp
	$(CXX) /c /nologo /TP /Fo$@ $(FZTESTS_CXXFLAGS) .\fztests\src\fztests.cpp

fztests_example.obj: .\fztests\src\example.c
	$(CC) /c /nologo /TC /Fo$@ $(FZTESTS_CFLAGS) .\fztests\src\example.c

